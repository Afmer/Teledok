@using app.Architecture.Enums
@model AddClientModel
@{
    var founderINNValidation = new {
        MaxLength = 10,
        MinLength = 10,
        Regex = @"^\\d+$"
    };
    string founderINNsNotExistsMessage = ViewBag.FounderINNsErrorMessage ?? "";
}
<div>
    <link rel="stylesheet" href="~/css/form-base.css" asp-append-version="true" />   
    <form id="addClientForm" method="post" class="form-base">
        <div class="background">
            <table>
                <tr><td>
                    <table class="input-text">
                        <tr><td><input type="text" asp-for="ClientINN" placeholder="Ввведите ИНН"/></td></td>
                        <tr><td><span class="span-error" asp-validation-for="ClientINN"></span></td></td>
                    </table>
                </td></tr>
                <tr><td>
                    <table class="input-text">
                        <tr><td><input type="text" asp-for="ClientName" placeholder="Введите название"></td></td>
                        <tr><td><span class="span-error" asp-validation-for="ClientName"></span></td></td>
                    </table>
                </td></tr>
                <tr><td>
                    <select asp-for="ClientType">
                        <option value="@ClientType.IndividualEntrepreneur">Индивидуальный предприниматель</option>
                        <option value="@ClientType.LegalEntity">Юридическое лицо</option>
                    </select>
                </td></tr>
                <tr id="FoundersINNContainer"><td>
                    <p class="span-error">@founderINNsNotExistsMessage</p>
                    <input type="number" asp-for="@Model.FoundersCount" min="0" max="100" placeholder="Количество учредителей"/>
                    <table id="FounderINNInputs" class="founder-inns-inputs">
                    </table>
                <td></tr>
                <tr><td>
                    <input type="submit"/>
                </td></tr>
            </table>
        </div>
    </form>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script>
        var clientType = document.getElementById('ClientType');
        var foundersNum = document.getElementById('FoundersINNContainer');
        var founderCountInput = document.getElementById('FoundersCount');
        var UpdateFoundersContentVisibility = function() {
            foundersNum = document.getElementById('FoundersINNContainer');

            if (clientType.value === '@ClientType.LegalEntity') {
                foundersNum.style = '';
                AddFounderINNsFileds();
            } else {
                foundersNum.style.display = 'none';
            }
        };
        var AddFounderINNsFileds = function() {
            var count = founderCountInput.value;
            if(count > 100)
                return;
            var html = '';
            for(var i = 0; i < count; i++){
                const index = i.toString();
                const string = `
                <tr><td>
                    <table>
                        <tr><td><input type="text" placeholder="Инн учредителя" maxlength="@founderINNValidation.MaxLength" class="founderINN" id="FounderINNs[${index}]" name="FounderINNs[${index}]"/></td></tr>
                        <tr><td><span class="span-error" data-valmsg-for="FounderINNs[${index}]" data-valmsg-replace="true"></span></td></tr>
                    </table>
                </td></tr>
                `;
                html += string;
            }
            document.getElementById('FounderINNInputs').innerHTML = html;
        };
        clientType.addEventListener('change', UpdateFoundersContentVisibility);
        document.addEventListener('DOMContentLoaded', UpdateFoundersContentVisibility);
        founderCountInput.addEventListener('change', AddFounderINNsFileds);
        jQuery.validator.addMethod("INNRequired", jQuery.validator.methods.required,"ИНН должен быть обязательно");
        jQuery.validator.addMethod("INNRegex", jQuery.validator.methods.regex, "Это не ИНН");
        jQuery.validator.addMethod("INNMaxLength", jQuery.validator.methods.maxlength, "ИНН не может быть больше @founderINNValidation.MaxLength");
        jQuery.validator.addMethod("INNMinLength", jQuery.validator.methods.minlength, "ИНН не может быть меньше @founderINNValidation.MinLength");
        $.validator.addClassRules({
            founderINN: {
                INNRequired: true,
                INNRegex: '@Html.Raw(founderINNValidation.Regex)',
                INNMinLength: @founderINNValidation.MinLength,
                INNMaxLength: @founderINNValidation.MaxLength
            }
        });
    </script>
</div>